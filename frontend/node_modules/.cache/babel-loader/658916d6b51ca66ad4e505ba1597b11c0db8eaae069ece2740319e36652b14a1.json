{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst jwt = require('jsonwebtoken');\nconst userRepository = require('./user-repository');\nconst {\n  secret\n} = require('./url');\nrouter.post('/', (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n  const user = userRepository.getUserByEmail(email);\n  if (!user || user.password !== password) {\n    return res.status(401).json({\n      message: 'Invalid email or password'\n    });\n  }\n  const token = jwt.sign({\n    userId: user.id\n  }, secret, {\n    expiresIn: '1h'\n  });\n  res.json({\n    message: 'Login successful',\n    token\n  });\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","jwt","userRepository","secret","post","req","res","email","password","body","user","getUserByEmail","status","json","message","token","sign","userId","id","expiresIn","module","exports"],"sources":["/Users/nichole/Desktop/proj/sqaFinals/frontend/src/components/Auth/Login.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst jwt = require('jsonwebtoken');\nconst userRepository = require('./user-repository');\nconst { secret } = require('./url');\n\nrouter.post('/', (req, res) => {\n    const { email, password } = req.body;\n    const user = userRepository.getUserByEmail(email);\n\n    if (!user || user.password !== password) {\n        return res.status(401).json({ message: 'Invalid email or password' });\n    }\n\n    const token = jwt.sign({ userId: user.id }, secret, { expiresIn: '1h' });\n    res.json({ message: 'Login successful', token });\n});\n\nmodule.exports = router;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,GAAG,GAAGH,OAAO,CAAC,cAAc,CAAC;AACnC,MAAMI,cAAc,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAM;EAAEK;AAAO,CAAC,GAAGL,OAAO,CAAC,OAAO,CAAC;AAEnCC,MAAM,CAACK,IAAI,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC3B,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;EACpC,MAAMC,IAAI,GAAGR,cAAc,CAACS,cAAc,CAACJ,KAAK,CAAC;EAEjD,IAAI,CAACG,IAAI,IAAIA,IAAI,CAACF,QAAQ,KAAKA,QAAQ,EAAE;IACrC,OAAOF,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA4B,CAAC,CAAC;EACzE;EAEA,MAAMC,KAAK,GAAGd,GAAG,CAACe,IAAI,CAAC;IAAEC,MAAM,EAAEP,IAAI,CAACQ;EAAG,CAAC,EAAEf,MAAM,EAAE;IAAEgB,SAAS,EAAE;EAAK,CAAC,CAAC;EACxEb,GAAG,CAACO,IAAI,CAAC;IAAEC,OAAO,EAAE,kBAAkB;IAAEC;EAAM,CAAC,CAAC;AACpD,CAAC,CAAC;AAEFK,MAAM,CAACC,OAAO,GAAGtB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}